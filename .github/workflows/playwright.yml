name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Instalar dependências
        run: npm ci

      - name: Instalar navegadores do Playwright
        run: npx playwright install --with-deps

      - name: Criar arquivo .env
        run: |
            echo "ADMIN_JWT_SECRET=${{ vars.ADMIN_JWT_SECRET }}"  >> .env
            echo "API_TOKEN_SALT=${{ vars.API_TOKEN_SALT }}"      >> .env
            echo "APP_KEYS=${{ vars.APP_KEYS }}"                  >> .env
            echo "DATABASE_CLIENT=${{ vars.DATABASE_CLIENT }}"    >> .env
            echo "DATABASE_FILENAME=${{ vars.DATABASE_FILENAME }}">> .env
            echo "DATABASE_SSL=${{ vars.DATABASE_SSL }}">> .env
            echo "HOST=${{ vars.HOST }}">> .env
            echo "JWT_SECRET=${{ vars.JWT_SECRET }}"  >> .env
            echo "PORT=${{ vars.PORT }}">> .env
            echo "TRANSFER_TOKEN_SALT=${{ vars.TRANSFER_TOKEN_SALT }}"  >> .env

        - name: Run Strapi + Playwright
        run: |
        # 1) sobe o Strapi em background
        npm run dev &

        # 2) espera 5s (ou melhor: aguarda porta liberada)
        sleep 5
        # ou: npx wait-on http://localhost:1337 --timeout 60000
    
        # 3) executa os testes enquanto o Strapi ainda tá rodando
        npx playwright test

        #   - uses: actions/upload-artifact@v4
        #     if: ${{ !cancelled() }}
        #     with:
        #       name: playwright-report
        #       path: playwright-report/
        #       retention-days: 30
